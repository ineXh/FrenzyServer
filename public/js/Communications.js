function Communications(){this.init()}function sendName(a){communication.socket.emit("name",a),menu.multiplayermenu.init_main()}function sendChat(a){communication.socket.emit("chat",a)}function onChat(a){console.log(a),addMessage(a.author,a.text,a.color,new Date(a.time))}function onSpawn(a){}function onSpawnExisting(a){console.log("onSpawnExisting");for(var b=0;b<a.characters.length;b++){var c=characters.spawn({x:a.characters[b].x*stage_width,y:a.characters[b].y*stage_height,type:a.characters[b].type,team:a.team,color:a.color});game.getTeam(a.team).characters[a.characters[b].type].push(c)}game.getTeam(a.team).color=a.color}function onStartInfo(a){gamestate=GameState.InPlay,myteam=a.team,myteamcolor=a.color,startlocation=a.location,game.startgame()}function onPath(a){game.getTeam(a.team).path.startPath(a.points[0].x*stage_width,a.points[0].y*stage_height),game.getTeam(a.team).path.endPath(a.points[1].x*stage_width,a.points[1].y*stage_height)}function onSync(a){for(var b=game.getTeam(a.team),c=0;c<a.characters.length;c++)if(void 0!=a.characters[c])for(var d=0;d<a.characters[c].length;d++)b.characters[c][d].pos.x=a.characters[c][d].x*stage_width,b.characters[c][d].pos.y=a.characters[c][d].y*stage_height,b.characters[c][d].vel.x=a.characters[c][d].vx*stage_width,b.characters[c][d].vel.y=a.characters[c][d].vy*stage_height}function addMessage(a,b,c,d){chatmonitor.prepend('<p><span "style="color:'+c+'"></span><span style="color:'+c+'">'+a+"</span> @ "+convertTime(d)+": "+b+"</p>")}var chatmonitor=$("#chatmonitor");Communications.prototype={init:function(){},connect:function(){return new Promise(function(a,b){communication.socket=io.connect("http://localhost:80/",{reconnection:!1}),setTimeout(function(){communication.socket.connected?(communication.setupconnection(),a()):(communication.socket.io._reconnection=!1,b())},1e3)})},setupconnection:function(){communication.sendClientInfo(),communication.socket.on("start info",onStartInfo),communication.socket.on("spawn existing",onSpawnExisting),communication.socket.on("spawn",onSpawnExisting),communication.socket.on("path",onPath),communication.socket.on("sync",onSync)},sendClientInfo:function(){this.socket.emit("client info",{width:width,height:height,stage_width:stage_width,stage_height:stage_height})},update:function(a){}};