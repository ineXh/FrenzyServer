function Communications(){this.init()}function sendName(t){communication.socket.emit("name",t),menu.multiplayermenu.init_main()}function sendChat(t){communication.socket.emit("chat",t)}function onChat(t){console.log(t),addMessage(t.author,t.text,t.color,new Date(t.time))}function onSpawn(t){}function onSpawnExisting(t){console.log("onSpawnExisting");for(var n=0;n<t.characters.length;n++){var e=characters.spawn({x:t.characters[n].x*stage_width,y:t.characters[n].y*stage_height,type:t.characters[n].type,team:t.team,color:t.color});game.getTeam(t.team).characters[t.characters[n].type].push(e)}game.getTeam(t.team).color=t.color}function onStartInfo(t){gamestate=GameState.InPlay,myteam=t.team,myteamcolor=t.color,startlocation=t.location,game.startgame()}function onPath(t){game.getTeam(t.team).path.startPath(t.points[0].x*stage_width,t.points[0].y*stage_height),game.getTeam(t.team).path.endPath(t.points[1].x*stage_width,t.points[1].y*stage_height)}function onSync(t){for(var n=game.getTeam(t.team),e=0;e<t.characters.length;e++)if(void 0!=t.characters[e])for(var o=0;o<t.characters[e].length;o++)n.characters[e][o].pos.x=t.characters[e][o].x*stage_width,n.characters[e][o].pos.y=t.characters[e][o].y*stage_height,n.characters[e][o].vel.x=t.characters[e][o].vx*stage_width,n.characters[e][o].vel.y=t.characters[e][o].vy*stage_height}function addMessage(t,n,e,o){chatmonitor.prepend('<p><span "style="color:'+e+'"></span><span style="color:'+e+'">'+t+"</span> @ "+convertTime(o)+": "+n+"</p>")}var chatmonitor=$("#chatmonitor");Communications.prototype={init:function(){},connect:function(){return new Promise(function(t,n){communication.socket=io.connect("http://localhost:80/",{reconnection:!1}),setTimeout(function(){communication.socket.connected?(communication.setupconnection(),t()):(communication.socket.io._reconnection=!1,n())},1e3)})},setupconnection:function(){communication.sendClientInfo(),communication.socket.on("start info",onStartInfo),communication.socket.on("spawn existing",onSpawnExisting),communication.socket.on("spawn",onSpawnExisting),communication.socket.on("path",onPath),communication.socket.on("sync",onSync)},sendClientInfo:function(){this.socket.emit("client info",{width:width,height:height,stage_width:stage_width,stage_height:stage_height})},update:function(t){}};